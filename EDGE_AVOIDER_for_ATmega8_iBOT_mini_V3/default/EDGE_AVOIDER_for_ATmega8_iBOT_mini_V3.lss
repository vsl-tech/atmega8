
EDGE_AVOIDER_for_ATmega8_iBOT_mini_V3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000906  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00000906  0000097a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000020  00000000  00000000  00000a82  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000024  00000000  00000000  00000aa2  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000002cb  00000000  00000000  00000ac6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000112  00000000  00000000  00000d91  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000002ac  00000000  00000000  00000ea3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000030  00000000  00000000  00001150  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000f5  00000000  00000000  00001180  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000003f6  00000000  00000000  00001275  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	11 e0       	ldi	r17, 0x01	; 1
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e6 e0       	ldi	r30, 0x06	; 6
  3a:	f9 e0       	ldi	r31, 0x09	; 9
  3c:	02 c0       	rjmp	.+4      	; 0x42 <.do_copy_data_start>

0000003e <.do_copy_data_loop>:
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0

00000042 <.do_copy_data_start>:
  42:	a8 36       	cpi	r26, 0x68	; 104
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <.do_copy_data_loop>

00000048 <__do_clear_bss>:
  48:	11 e0       	ldi	r17, 0x01	; 1
  4a:	a8 e6       	ldi	r26, 0x68	; 104
  4c:	b1 e0       	ldi	r27, 0x01	; 1
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a8 36       	cpi	r26, 0x68	; 104
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	2e d0       	rcall	.+92     	; 0xb6 <main>
  5a:	53 c4       	rjmp	.+2214   	; 0x902 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <wait>:


void wait(float sec);
void wait(float sec)
{
  5e:	cf 92       	push	r12
  60:	df 92       	push	r13
  62:	ef 92       	push	r14
  64:	ff 92       	push	r15
  66:	0f 93       	push	r16
  68:	1f 93       	push	r17
  6a:	cf 93       	push	r28
  6c:	df 93       	push	r29
for(int i=0;i<(int)46*sec;i++)
  6e:	20 e0       	ldi	r18, 0x00	; 0
  70:	30 e0       	ldi	r19, 0x00	; 0
  72:	48 e3       	ldi	r20, 0x38	; 56
  74:	52 e4       	ldi	r21, 0x42	; 66
  76:	9f d0       	rcall	.+318    	; 0x1b6 <__mulsf3>
  78:	7b 01       	movw	r14, r22
  7a:	8c 01       	movw	r16, r24
  7c:	c0 e0       	ldi	r28, 0x00	; 0
  7e:	d0 e0       	ldi	r29, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  80:	cc 24       	eor	r12, r12
  82:	dd 24       	eor	r13, r13
  84:	04 c0       	rjmp	.+8      	; 0x8e <wait+0x30>
  86:	c6 01       	movw	r24, r12
  88:	01 97       	sbiw	r24, 0x01	; 1
  8a:	f1 f7       	brne	.-4      	; 0x88 <wait+0x2a>
  8c:	21 96       	adiw	r28, 0x01	; 1
  8e:	be 01       	movw	r22, r28
  90:	88 27       	eor	r24, r24
  92:	77 fd       	sbrc	r23, 7
  94:	80 95       	com	r24
  96:	98 2f       	mov	r25, r24
  98:	ae d1       	rcall	.+860    	; 0x3f6 <__floatsisf>
  9a:	a8 01       	movw	r20, r16
  9c:	97 01       	movw	r18, r14
  9e:	80 d1       	rcall	.+768    	; 0x3a0 <__ltsf2>
  a0:	87 fd       	sbrc	r24, 7
  a2:	f1 cf       	rjmp	.-30     	; 0x86 <wait+0x28>
_delay_loop_2(0);
  a4:	df 91       	pop	r29
  a6:	cf 91       	pop	r28
  a8:	1f 91       	pop	r17
  aa:	0f 91       	pop	r16
  ac:	ff 90       	pop	r15
  ae:	ef 90       	pop	r14
  b0:	df 90       	pop	r13
  b2:	cf 90       	pop	r12
  b4:	08 95       	ret

000000b6 <main>:
#define F_CPU 12000000UL
#include<avr/io.h>
#include<util/delay.h>
#include "robosapiens.c"
int main(void)
{
  b6:	0f 93       	push	r16
  b8:	1f 93       	push	r17
	DDRD=0b11111111;	  		//set PD4 as output bit
  ba:	8f ef       	ldi	r24, 0xFF	; 255
  bc:	81 bb       	out	0x11, r24	; 17
	DDRC=0b0000000;   			//set PORTC as input port
  be:	14 ba       	out	0x14, r1	; 20
	DDRB=0b00011110;  			//PB1, PB2, PB3, PB4 as output port
  c0:	8e e1       	ldi	r24, 0x1E	; 30
  c2:	87 bb       	out	0x17, r24	; 23
	ls=(PINC&0b0001000);   		// acquire only right sensor status connected at PC3
	PORTD = ~PORTD;		
		
		if((rs==0b0000000)||(ls==0b0000000)) 
		{
		PORTD=(1<<4);
  c4:	a0 e1       	ldi	r26, 0x10	; 16
		if((rs==0b0000001)&&(ls==0b0000000))  //check sensor status for left sensor=ON and
		                                     // right sensor=OFF
		{
			
			PORTD = (1<<4);
			PORTB=0b00001100;    //backward
  c6:	bc e0       	ldi	r27, 0x0C	; 12
  c8:	60 e0       	ldi	r22, 0x00	; 0
  ca:	70 e0       	ldi	r23, 0x00	; 0

			PORTB=0b00000000;  	//stop
			PORTD = (1<<4);
			PORTB=0b00001100;  	//backward
			wait(.8);
     		PORTB=0b00000010;  	//turn right or user can define their own turn
  cc:	12 e0       	ldi	r17, 0x02	; 2
		

        if((rs==0b0000001)&&(ls==0b0001000)) //check sensor status for both sensor ON 
		{

			PORTB=0b00010010;  //move forward
  ce:	02 e1       	ldi	r16, 0x12	; 18
					  			// acquire the left sensor status in ls and right sensor
					  			// status in rs 
	while(1)          			// create infinite loop
	{
	
	rs=(PINC&0b0000001);   		//acquire only left sensor status connected at PC0
  d0:	83 b3       	in	r24, 0x13	; 19
  d2:	90 e0       	ldi	r25, 0x00	; 0
	ls=(PINC&0b0001000);   		// acquire only right sensor status connected at PC3
  d4:	23 b3       	in	r18, 0x13	; 19
  d6:	42 2f       	mov	r20, r18
  d8:	50 e0       	ldi	r21, 0x00	; 0
  da:	48 70       	andi	r20, 0x08	; 8
  dc:	50 70       	andi	r21, 0x00	; 0
	PORTD = ~PORTD;		
  de:	22 b3       	in	r18, 0x12	; 18
  e0:	20 95       	com	r18
  e2:	22 bb       	out	0x12, r18	; 18
		
		if((rs==0b0000000)||(ls==0b0000000)) 
  e4:	9c 01       	movw	r18, r24
  e6:	21 70       	andi	r18, 0x01	; 1
  e8:	30 70       	andi	r19, 0x00	; 0
  ea:	80 ff       	sbrs	r24, 0
  ec:	03 c0       	rjmp	.+6      	; 0xf4 <main+0x3e>
  ee:	41 15       	cp	r20, r1
  f0:	51 05       	cpc	r21, r1
  f2:	01 f5       	brne	.+64     	; 0x134 <main+0x7e>
		{
		PORTD=(1<<4);
  f4:	a2 bb       	out	0x12, r26	; 18
		}		

		if((rs==0b0000000)&&(ls==0b0000000)) //check sensor status for both sensor OFF 
  f6:	23 2b       	or	r18, r19
  f8:	09 f5       	brne	.+66     	; 0x13c <main+0x86>
  fa:	41 15       	cp	r20, r1
  fc:	51 05       	cpc	r21, r1
  fe:	09 f0       	breq	.+2      	; 0x102 <main+0x4c>
 100:	38 c0       	rjmp	.+112    	; 0x172 <main+0xbc>
		{

			PORTB=0b00000000;  	//stop
 102:	18 ba       	out	0x18, r1	; 24
			PORTD = (1<<4);
 104:	a2 bb       	out	0x12, r26	; 18
			PORTB=0b00001100;  	//backward
 106:	b8 bb       	out	0x18, r27	; 24
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	04 c0       	rjmp	.+8      	; 0x116 <main+0x60>
 10e:	fb 01       	movw	r30, r22
 110:	31 97       	sbiw	r30, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <main+0x5a>


void wait(float sec);
void wait(float sec)
{
for(int i=0;i<(int)46*sec;i++)
 114:	01 96       	adiw	r24, 0x01	; 1
 116:	85 32       	cpi	r24, 0x25	; 37
 118:	91 05       	cpc	r25, r1
 11a:	c9 f7       	brne	.-14     	; 0x10e <main+0x58>
			wait(.8);
     		PORTB=0b00000010;  	//turn right or user can define their own turn
 11c:	18 bb       	out	0x18, r17	; 24
 11e:	80 e0       	ldi	r24, 0x00	; 0
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	04 c0       	rjmp	.+8      	; 0x12c <main+0x76>
 124:	fb 01       	movw	r30, r22
 126:	31 97       	sbiw	r30, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <main+0x70>
 12a:	01 96       	adiw	r24, 0x01	; 1
 12c:	85 32       	cpi	r24, 0x25	; 37
 12e:	91 05       	cpc	r25, r1
 130:	c9 f7       	brne	.-14     	; 0x124 <main+0x6e>
 132:	1f c0       	rjmp	.+62     	; 0x172 <main+0xbc>
			ls=0;              	//set sensor status off
			rs=0;              	//set sensor status off
		
		}

		if((rs==0b0000001)&&(ls==0b0000000))  //check sensor status for left sensor=ON and
 134:	21 30       	cpi	r18, 0x01	; 1
 136:	31 05       	cpc	r19, r1
 138:	e1 f4       	brne	.+56     	; 0x172 <main+0xbc>
 13a:	37 c0       	rjmp	.+110    	; 0x1aa <main+0xf4>
 13c:	41 15       	cp	r20, r1
 13e:	51 05       	cpc	r21, r1
 140:	a1 f5       	brne	.+104    	; 0x1aa <main+0xf4>
		                                     // right sensor=OFF
		{
			
			PORTD = (1<<4);
 142:	a2 bb       	out	0x12, r26	; 18
			PORTB=0b00001100;    //backward
 144:	b8 bb       	out	0x18, r27	; 24
 146:	80 e0       	ldi	r24, 0x00	; 0
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	04 c0       	rjmp	.+8      	; 0x154 <main+0x9e>
 14c:	fb 01       	movw	r30, r22
 14e:	31 97       	sbiw	r30, 0x01	; 1
 150:	f1 f7       	brne	.-4      	; 0x14e <main+0x98>
 152:	01 96       	adiw	r24, 0x01	; 1
 154:	85 32       	cpi	r24, 0x25	; 37
 156:	91 05       	cpc	r25, r1
 158:	c9 f7       	brne	.-14     	; 0x14c <main+0x96>
			wait(.8);
			PORTB=0b00010000;    //turn right to avoid the edge
 15a:	a8 bb       	out	0x18, r26	; 24
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	04 c0       	rjmp	.+8      	; 0x16a <main+0xb4>
 162:	fb 01       	movw	r30, r22
 164:	31 97       	sbiw	r30, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <main+0xae>
 168:	01 96       	adiw	r24, 0x01	; 1
 16a:	85 32       	cpi	r24, 0x25	; 37
 16c:	91 05       	cpc	r25, r1
 16e:	c9 f7       	brne	.-14     	; 0x162 <main+0xac>
 170:	af cf       	rjmp	.-162    	; 0xd0 <main+0x1a>
			rs=0; 				 //set sensor status off
				            
		}
	
	
		if((rs==0b0000000)&&(ls==0b0001000))  //check sensor status for left sensor=OFF and
 172:	48 30       	cpi	r20, 0x08	; 8
 174:	51 05       	cpc	r21, r1
 176:	09 f0       	breq	.+2      	; 0x17a <main+0xc4>
 178:	ab cf       	rjmp	.-170    	; 0xd0 <main+0x1a>
		                                     // right sensor=ON
		{
			 
			PORTD = (1<<4);
 17a:	a2 bb       	out	0x12, r26	; 18
			PORTB=0b00001100;    //backward
 17c:	b8 bb       	out	0x18, r27	; 24
 17e:	80 e0       	ldi	r24, 0x00	; 0
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	04 c0       	rjmp	.+8      	; 0x18c <main+0xd6>
 184:	fb 01       	movw	r30, r22
 186:	31 97       	sbiw	r30, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <main+0xd0>
 18a:	01 96       	adiw	r24, 0x01	; 1
 18c:	85 32       	cpi	r24, 0x25	; 37
 18e:	91 05       	cpc	r25, r1
 190:	c9 f7       	brne	.-14     	; 0x184 <main+0xce>
			wait(.8);
			PORTB=0b00000010;    //turn left to avoid the edge
 192:	18 bb       	out	0x18, r17	; 24
 194:	80 e0       	ldi	r24, 0x00	; 0
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	04 c0       	rjmp	.+8      	; 0x1a2 <main+0xec>
 19a:	fb 01       	movw	r30, r22
 19c:	31 97       	sbiw	r30, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <main+0xe6>
 1a0:	01 96       	adiw	r24, 0x01	; 1
 1a2:	85 32       	cpi	r24, 0x25	; 37
 1a4:	91 05       	cpc	r25, r1
 1a6:	c9 f7       	brne	.-14     	; 0x19a <main+0xe4>
 1a8:	93 cf       	rjmp	.-218    	; 0xd0 <main+0x1a>
			 
		}
	
		

        if((rs==0b0000001)&&(ls==0b0001000)) //check sensor status for both sensor ON 
 1aa:	48 30       	cpi	r20, 0x08	; 8
 1ac:	51 05       	cpc	r21, r1
 1ae:	09 f0       	breq	.+2      	; 0x1b2 <main+0xfc>
 1b0:	8f cf       	rjmp	.-226    	; 0xd0 <main+0x1a>
		{

			PORTB=0b00010010;  //move forward
 1b2:	08 bb       	out	0x18, r16	; 24
 1b4:	8d cf       	rjmp	.-230    	; 0xd0 <main+0x1a>

000001b6 <__mulsf3>:
 1b6:	a0 e2       	ldi	r26, 0x20	; 32
 1b8:	b0 e0       	ldi	r27, 0x00	; 0
 1ba:	e0 ee       	ldi	r30, 0xE0	; 224
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	6a c3       	rjmp	.+1748   	; 0x894 <__prologue_saves__>
 1c0:	69 83       	std	Y+1, r22	; 0x01
 1c2:	7a 83       	std	Y+2, r23	; 0x02
 1c4:	8b 83       	std	Y+3, r24	; 0x03
 1c6:	9c 83       	std	Y+4, r25	; 0x04
 1c8:	2d 83       	std	Y+5, r18	; 0x05
 1ca:	3e 83       	std	Y+6, r19	; 0x06
 1cc:	4f 83       	std	Y+7, r20	; 0x07
 1ce:	58 87       	std	Y+8, r21	; 0x08
 1d0:	ce 01       	movw	r24, r28
 1d2:	01 96       	adiw	r24, 0x01	; 1
 1d4:	be 01       	movw	r22, r28
 1d6:	67 5f       	subi	r22, 0xF7	; 247
 1d8:	7f 4f       	sbci	r23, 0xFF	; 255
 1da:	8b d2       	rcall	.+1302   	; 0x6f2 <__unpack_f>
 1dc:	ce 01       	movw	r24, r28
 1de:	05 96       	adiw	r24, 0x05	; 5
 1e0:	be 01       	movw	r22, r28
 1e2:	6f 5e       	subi	r22, 0xEF	; 239
 1e4:	7f 4f       	sbci	r23, 0xFF	; 255
 1e6:	85 d2       	rcall	.+1290   	; 0x6f2 <__unpack_f>
 1e8:	99 85       	ldd	r25, Y+9	; 0x09
 1ea:	92 30       	cpi	r25, 0x02	; 2
 1ec:	88 f0       	brcs	.+34     	; 0x210 <__mulsf3+0x5a>
 1ee:	89 89       	ldd	r24, Y+17	; 0x11
 1f0:	82 30       	cpi	r24, 0x02	; 2
 1f2:	c8 f0       	brcs	.+50     	; 0x226 <__mulsf3+0x70>
 1f4:	94 30       	cpi	r25, 0x04	; 4
 1f6:	19 f4       	brne	.+6      	; 0x1fe <__mulsf3+0x48>
 1f8:	82 30       	cpi	r24, 0x02	; 2
 1fa:	51 f4       	brne	.+20     	; 0x210 <__mulsf3+0x5a>
 1fc:	04 c0       	rjmp	.+8      	; 0x206 <__mulsf3+0x50>
 1fe:	84 30       	cpi	r24, 0x04	; 4
 200:	29 f4       	brne	.+10     	; 0x20c <__mulsf3+0x56>
 202:	92 30       	cpi	r25, 0x02	; 2
 204:	81 f4       	brne	.+32     	; 0x226 <__mulsf3+0x70>
 206:	80 e6       	ldi	r24, 0x60	; 96
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	c6 c0       	rjmp	.+396    	; 0x398 <__mulsf3+0x1e2>
 20c:	92 30       	cpi	r25, 0x02	; 2
 20e:	49 f4       	brne	.+18     	; 0x222 <__mulsf3+0x6c>
 210:	20 e0       	ldi	r18, 0x00	; 0
 212:	9a 85       	ldd	r25, Y+10	; 0x0a
 214:	8a 89       	ldd	r24, Y+18	; 0x12
 216:	98 13       	cpse	r25, r24
 218:	21 e0       	ldi	r18, 0x01	; 1
 21a:	2a 87       	std	Y+10, r18	; 0x0a
 21c:	ce 01       	movw	r24, r28
 21e:	09 96       	adiw	r24, 0x09	; 9
 220:	bb c0       	rjmp	.+374    	; 0x398 <__mulsf3+0x1e2>
 222:	82 30       	cpi	r24, 0x02	; 2
 224:	49 f4       	brne	.+18     	; 0x238 <__mulsf3+0x82>
 226:	20 e0       	ldi	r18, 0x00	; 0
 228:	9a 85       	ldd	r25, Y+10	; 0x0a
 22a:	8a 89       	ldd	r24, Y+18	; 0x12
 22c:	98 13       	cpse	r25, r24
 22e:	21 e0       	ldi	r18, 0x01	; 1
 230:	2a 8b       	std	Y+18, r18	; 0x12
 232:	ce 01       	movw	r24, r28
 234:	41 96       	adiw	r24, 0x11	; 17
 236:	b0 c0       	rjmp	.+352    	; 0x398 <__mulsf3+0x1e2>
 238:	2d 84       	ldd	r2, Y+13	; 0x0d
 23a:	3e 84       	ldd	r3, Y+14	; 0x0e
 23c:	4f 84       	ldd	r4, Y+15	; 0x0f
 23e:	58 88       	ldd	r5, Y+16	; 0x10
 240:	6d 88       	ldd	r6, Y+21	; 0x15
 242:	7e 88       	ldd	r7, Y+22	; 0x16
 244:	8f 88       	ldd	r8, Y+23	; 0x17
 246:	98 8c       	ldd	r9, Y+24	; 0x18
 248:	ee 24       	eor	r14, r14
 24a:	ff 24       	eor	r15, r15
 24c:	87 01       	movw	r16, r14
 24e:	aa 24       	eor	r10, r10
 250:	bb 24       	eor	r11, r11
 252:	65 01       	movw	r12, r10
 254:	40 e0       	ldi	r20, 0x00	; 0
 256:	50 e0       	ldi	r21, 0x00	; 0
 258:	60 e0       	ldi	r22, 0x00	; 0
 25a:	70 e0       	ldi	r23, 0x00	; 0
 25c:	e0 e0       	ldi	r30, 0x00	; 0
 25e:	f0 e0       	ldi	r31, 0x00	; 0
 260:	c1 01       	movw	r24, r2
 262:	81 70       	andi	r24, 0x01	; 1
 264:	90 70       	andi	r25, 0x00	; 0
 266:	89 2b       	or	r24, r25
 268:	e9 f0       	breq	.+58     	; 0x2a4 <__mulsf3+0xee>
 26a:	e6 0c       	add	r14, r6
 26c:	f7 1c       	adc	r15, r7
 26e:	08 1d       	adc	r16, r8
 270:	19 1d       	adc	r17, r9
 272:	9a 01       	movw	r18, r20
 274:	ab 01       	movw	r20, r22
 276:	2a 0d       	add	r18, r10
 278:	3b 1d       	adc	r19, r11
 27a:	4c 1d       	adc	r20, r12
 27c:	5d 1d       	adc	r21, r13
 27e:	80 e0       	ldi	r24, 0x00	; 0
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	a0 e0       	ldi	r26, 0x00	; 0
 284:	b0 e0       	ldi	r27, 0x00	; 0
 286:	e6 14       	cp	r14, r6
 288:	f7 04       	cpc	r15, r7
 28a:	08 05       	cpc	r16, r8
 28c:	19 05       	cpc	r17, r9
 28e:	20 f4       	brcc	.+8      	; 0x298 <__mulsf3+0xe2>
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	a0 e0       	ldi	r26, 0x00	; 0
 296:	b0 e0       	ldi	r27, 0x00	; 0
 298:	ba 01       	movw	r22, r20
 29a:	a9 01       	movw	r20, r18
 29c:	48 0f       	add	r20, r24
 29e:	59 1f       	adc	r21, r25
 2a0:	6a 1f       	adc	r22, r26
 2a2:	7b 1f       	adc	r23, r27
 2a4:	aa 0c       	add	r10, r10
 2a6:	bb 1c       	adc	r11, r11
 2a8:	cc 1c       	adc	r12, r12
 2aa:	dd 1c       	adc	r13, r13
 2ac:	97 fe       	sbrs	r9, 7
 2ae:	08 c0       	rjmp	.+16     	; 0x2c0 <__mulsf3+0x10a>
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	a0 e0       	ldi	r26, 0x00	; 0
 2b6:	b0 e0       	ldi	r27, 0x00	; 0
 2b8:	a8 2a       	or	r10, r24
 2ba:	b9 2a       	or	r11, r25
 2bc:	ca 2a       	or	r12, r26
 2be:	db 2a       	or	r13, r27
 2c0:	31 96       	adiw	r30, 0x01	; 1
 2c2:	e0 32       	cpi	r30, 0x20	; 32
 2c4:	f1 05       	cpc	r31, r1
 2c6:	49 f0       	breq	.+18     	; 0x2da <__mulsf3+0x124>
 2c8:	66 0c       	add	r6, r6
 2ca:	77 1c       	adc	r7, r7
 2cc:	88 1c       	adc	r8, r8
 2ce:	99 1c       	adc	r9, r9
 2d0:	56 94       	lsr	r5
 2d2:	47 94       	ror	r4
 2d4:	37 94       	ror	r3
 2d6:	27 94       	ror	r2
 2d8:	c3 cf       	rjmp	.-122    	; 0x260 <__mulsf3+0xaa>
 2da:	fa 85       	ldd	r31, Y+10	; 0x0a
 2dc:	ea 89       	ldd	r30, Y+18	; 0x12
 2de:	2b 89       	ldd	r18, Y+19	; 0x13
 2e0:	3c 89       	ldd	r19, Y+20	; 0x14
 2e2:	8b 85       	ldd	r24, Y+11	; 0x0b
 2e4:	9c 85       	ldd	r25, Y+12	; 0x0c
 2e6:	28 0f       	add	r18, r24
 2e8:	39 1f       	adc	r19, r25
 2ea:	2e 5f       	subi	r18, 0xFE	; 254
 2ec:	3f 4f       	sbci	r19, 0xFF	; 255
 2ee:	17 c0       	rjmp	.+46     	; 0x31e <__mulsf3+0x168>
 2f0:	ca 01       	movw	r24, r20
 2f2:	81 70       	andi	r24, 0x01	; 1
 2f4:	90 70       	andi	r25, 0x00	; 0
 2f6:	89 2b       	or	r24, r25
 2f8:	61 f0       	breq	.+24     	; 0x312 <__mulsf3+0x15c>
 2fa:	16 95       	lsr	r17
 2fc:	07 95       	ror	r16
 2fe:	f7 94       	ror	r15
 300:	e7 94       	ror	r14
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	a0 e0       	ldi	r26, 0x00	; 0
 308:	b0 e8       	ldi	r27, 0x80	; 128
 30a:	e8 2a       	or	r14, r24
 30c:	f9 2a       	or	r15, r25
 30e:	0a 2b       	or	r16, r26
 310:	1b 2b       	or	r17, r27
 312:	76 95       	lsr	r23
 314:	67 95       	ror	r22
 316:	57 95       	ror	r21
 318:	47 95       	ror	r20
 31a:	2f 5f       	subi	r18, 0xFF	; 255
 31c:	3f 4f       	sbci	r19, 0xFF	; 255
 31e:	77 fd       	sbrc	r23, 7
 320:	e7 cf       	rjmp	.-50     	; 0x2f0 <__mulsf3+0x13a>
 322:	0c c0       	rjmp	.+24     	; 0x33c <__mulsf3+0x186>
 324:	44 0f       	add	r20, r20
 326:	55 1f       	adc	r21, r21
 328:	66 1f       	adc	r22, r22
 32a:	77 1f       	adc	r23, r23
 32c:	17 fd       	sbrc	r17, 7
 32e:	41 60       	ori	r20, 0x01	; 1
 330:	ee 0c       	add	r14, r14
 332:	ff 1c       	adc	r15, r15
 334:	00 1f       	adc	r16, r16
 336:	11 1f       	adc	r17, r17
 338:	21 50       	subi	r18, 0x01	; 1
 33a:	30 40       	sbci	r19, 0x00	; 0
 33c:	40 30       	cpi	r20, 0x00	; 0
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	59 07       	cpc	r21, r25
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	69 07       	cpc	r22, r25
 346:	90 e4       	ldi	r25, 0x40	; 64
 348:	79 07       	cpc	r23, r25
 34a:	60 f3       	brcs	.-40     	; 0x324 <__mulsf3+0x16e>
 34c:	2b 8f       	std	Y+27, r18	; 0x1b
 34e:	3c 8f       	std	Y+28, r19	; 0x1c
 350:	db 01       	movw	r26, r22
 352:	ca 01       	movw	r24, r20
 354:	8f 77       	andi	r24, 0x7F	; 127
 356:	90 70       	andi	r25, 0x00	; 0
 358:	a0 70       	andi	r26, 0x00	; 0
 35a:	b0 70       	andi	r27, 0x00	; 0
 35c:	80 34       	cpi	r24, 0x40	; 64
 35e:	91 05       	cpc	r25, r1
 360:	a1 05       	cpc	r26, r1
 362:	b1 05       	cpc	r27, r1
 364:	61 f4       	brne	.+24     	; 0x37e <__mulsf3+0x1c8>
 366:	47 fd       	sbrc	r20, 7
 368:	0a c0       	rjmp	.+20     	; 0x37e <__mulsf3+0x1c8>
 36a:	e1 14       	cp	r14, r1
 36c:	f1 04       	cpc	r15, r1
 36e:	01 05       	cpc	r16, r1
 370:	11 05       	cpc	r17, r1
 372:	29 f0       	breq	.+10     	; 0x37e <__mulsf3+0x1c8>
 374:	40 5c       	subi	r20, 0xC0	; 192
 376:	5f 4f       	sbci	r21, 0xFF	; 255
 378:	6f 4f       	sbci	r22, 0xFF	; 255
 37a:	7f 4f       	sbci	r23, 0xFF	; 255
 37c:	40 78       	andi	r20, 0x80	; 128
 37e:	1a 8e       	std	Y+26, r1	; 0x1a
 380:	fe 17       	cp	r31, r30
 382:	11 f0       	breq	.+4      	; 0x388 <__mulsf3+0x1d2>
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	8a 8f       	std	Y+26, r24	; 0x1a
 388:	4d 8f       	std	Y+29, r20	; 0x1d
 38a:	5e 8f       	std	Y+30, r21	; 0x1e
 38c:	6f 8f       	std	Y+31, r22	; 0x1f
 38e:	78 a3       	std	Y+32, r23	; 0x20
 390:	83 e0       	ldi	r24, 0x03	; 3
 392:	89 8f       	std	Y+25, r24	; 0x19
 394:	ce 01       	movw	r24, r28
 396:	49 96       	adiw	r24, 0x19	; 25
 398:	d7 d0       	rcall	.+430    	; 0x548 <__pack_f>
 39a:	a0 96       	adiw	r28, 0x20	; 32
 39c:	e2 e1       	ldi	r30, 0x12	; 18
 39e:	96 c2       	rjmp	.+1324   	; 0x8cc <__epilogue_restores__>

000003a0 <__ltsf2>:
 3a0:	a8 e1       	ldi	r26, 0x18	; 24
 3a2:	b0 e0       	ldi	r27, 0x00	; 0
 3a4:	e5 ed       	ldi	r30, 0xD5	; 213
 3a6:	f1 e0       	ldi	r31, 0x01	; 1
 3a8:	81 c2       	rjmp	.+1282   	; 0x8ac <__prologue_saves__+0x18>
 3aa:	69 83       	std	Y+1, r22	; 0x01
 3ac:	7a 83       	std	Y+2, r23	; 0x02
 3ae:	8b 83       	std	Y+3, r24	; 0x03
 3b0:	9c 83       	std	Y+4, r25	; 0x04
 3b2:	2d 83       	std	Y+5, r18	; 0x05
 3b4:	3e 83       	std	Y+6, r19	; 0x06
 3b6:	4f 83       	std	Y+7, r20	; 0x07
 3b8:	58 87       	std	Y+8, r21	; 0x08
 3ba:	89 e0       	ldi	r24, 0x09	; 9
 3bc:	e8 2e       	mov	r14, r24
 3be:	f1 2c       	mov	r15, r1
 3c0:	ec 0e       	add	r14, r28
 3c2:	fd 1e       	adc	r15, r29
 3c4:	ce 01       	movw	r24, r28
 3c6:	01 96       	adiw	r24, 0x01	; 1
 3c8:	b7 01       	movw	r22, r14
 3ca:	93 d1       	rcall	.+806    	; 0x6f2 <__unpack_f>
 3cc:	8e 01       	movw	r16, r28
 3ce:	0f 5e       	subi	r16, 0xEF	; 239
 3d0:	1f 4f       	sbci	r17, 0xFF	; 255
 3d2:	ce 01       	movw	r24, r28
 3d4:	05 96       	adiw	r24, 0x05	; 5
 3d6:	b8 01       	movw	r22, r16
 3d8:	8c d1       	rcall	.+792    	; 0x6f2 <__unpack_f>
 3da:	89 85       	ldd	r24, Y+9	; 0x09
 3dc:	82 30       	cpi	r24, 0x02	; 2
 3de:	38 f0       	brcs	.+14     	; 0x3ee <__ltsf2+0x4e>
 3e0:	89 89       	ldd	r24, Y+17	; 0x11
 3e2:	82 30       	cpi	r24, 0x02	; 2
 3e4:	20 f0       	brcs	.+8      	; 0x3ee <__ltsf2+0x4e>
 3e6:	c7 01       	movw	r24, r14
 3e8:	b8 01       	movw	r22, r16
 3ea:	fb d1       	rcall	.+1014   	; 0x7e2 <__fpcmp_parts_f>
 3ec:	01 c0       	rjmp	.+2      	; 0x3f0 <__ltsf2+0x50>
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	68 96       	adiw	r28, 0x18	; 24
 3f2:	e6 e0       	ldi	r30, 0x06	; 6
 3f4:	77 c2       	rjmp	.+1262   	; 0x8e4 <__epilogue_restores__+0x18>

000003f6 <__floatsisf>:
 3f6:	a8 e0       	ldi	r26, 0x08	; 8
 3f8:	b0 e0       	ldi	r27, 0x00	; 0
 3fa:	e0 e0       	ldi	r30, 0x00	; 0
 3fc:	f2 e0       	ldi	r31, 0x02	; 2
 3fe:	53 c2       	rjmp	.+1190   	; 0x8a6 <__prologue_saves__+0x12>
 400:	9b 01       	movw	r18, r22
 402:	ac 01       	movw	r20, r24
 404:	83 e0       	ldi	r24, 0x03	; 3
 406:	89 83       	std	Y+1, r24	; 0x01
 408:	da 01       	movw	r26, r20
 40a:	c9 01       	movw	r24, r18
 40c:	88 27       	eor	r24, r24
 40e:	b7 fd       	sbrc	r27, 7
 410:	83 95       	inc	r24
 412:	99 27       	eor	r25, r25
 414:	aa 27       	eor	r26, r26
 416:	bb 27       	eor	r27, r27
 418:	b8 2e       	mov	r11, r24
 41a:	21 15       	cp	r18, r1
 41c:	31 05       	cpc	r19, r1
 41e:	41 05       	cpc	r20, r1
 420:	51 05       	cpc	r21, r1
 422:	19 f4       	brne	.+6      	; 0x42a <__floatsisf+0x34>
 424:	82 e0       	ldi	r24, 0x02	; 2
 426:	89 83       	std	Y+1, r24	; 0x01
 428:	39 c0       	rjmp	.+114    	; 0x49c <__stack+0x3d>
 42a:	88 23       	and	r24, r24
 42c:	a9 f0       	breq	.+42     	; 0x458 <__floatsisf+0x62>
 42e:	20 30       	cpi	r18, 0x00	; 0
 430:	80 e0       	ldi	r24, 0x00	; 0
 432:	38 07       	cpc	r19, r24
 434:	80 e0       	ldi	r24, 0x00	; 0
 436:	48 07       	cpc	r20, r24
 438:	80 e8       	ldi	r24, 0x80	; 128
 43a:	58 07       	cpc	r21, r24
 43c:	29 f4       	brne	.+10     	; 0x448 <__floatsisf+0x52>
 43e:	60 e0       	ldi	r22, 0x00	; 0
 440:	70 e0       	ldi	r23, 0x00	; 0
 442:	80 e0       	ldi	r24, 0x00	; 0
 444:	9f ec       	ldi	r25, 0xCF	; 207
 446:	2e c0       	rjmp	.+92     	; 0x4a4 <__stack+0x45>
 448:	ee 24       	eor	r14, r14
 44a:	ff 24       	eor	r15, r15
 44c:	87 01       	movw	r16, r14
 44e:	e2 1a       	sub	r14, r18
 450:	f3 0a       	sbc	r15, r19
 452:	04 0b       	sbc	r16, r20
 454:	15 0b       	sbc	r17, r21
 456:	02 c0       	rjmp	.+4      	; 0x45c <__floatsisf+0x66>
 458:	79 01       	movw	r14, r18
 45a:	8a 01       	movw	r16, r20
 45c:	8e e1       	ldi	r24, 0x1E	; 30
 45e:	c8 2e       	mov	r12, r24
 460:	d1 2c       	mov	r13, r1
 462:	dc 82       	std	Y+4, r13	; 0x04
 464:	cb 82       	std	Y+3, r12	; 0x03
 466:	ed 82       	std	Y+5, r14	; 0x05
 468:	fe 82       	std	Y+6, r15	; 0x06
 46a:	0f 83       	std	Y+7, r16	; 0x07
 46c:	18 87       	std	Y+8, r17	; 0x08
 46e:	c8 01       	movw	r24, r16
 470:	b7 01       	movw	r22, r14
 472:	1b d0       	rcall	.+54     	; 0x4aa <__clzsi2>
 474:	01 97       	sbiw	r24, 0x01	; 1
 476:	18 16       	cp	r1, r24
 478:	19 06       	cpc	r1, r25
 47a:	84 f4       	brge	.+32     	; 0x49c <__stack+0x3d>
 47c:	08 2e       	mov	r0, r24
 47e:	04 c0       	rjmp	.+8      	; 0x488 <__stack+0x29>
 480:	ee 0c       	add	r14, r14
 482:	ff 1c       	adc	r15, r15
 484:	00 1f       	adc	r16, r16
 486:	11 1f       	adc	r17, r17
 488:	0a 94       	dec	r0
 48a:	d2 f7       	brpl	.-12     	; 0x480 <__stack+0x21>
 48c:	ed 82       	std	Y+5, r14	; 0x05
 48e:	fe 82       	std	Y+6, r15	; 0x06
 490:	0f 83       	std	Y+7, r16	; 0x07
 492:	18 87       	std	Y+8, r17	; 0x08
 494:	c8 1a       	sub	r12, r24
 496:	d9 0a       	sbc	r13, r25
 498:	dc 82       	std	Y+4, r13	; 0x04
 49a:	cb 82       	std	Y+3, r12	; 0x03
 49c:	ba 82       	std	Y+2, r11	; 0x02
 49e:	ce 01       	movw	r24, r28
 4a0:	01 96       	adiw	r24, 0x01	; 1
 4a2:	52 d0       	rcall	.+164    	; 0x548 <__pack_f>
 4a4:	28 96       	adiw	r28, 0x08	; 8
 4a6:	e9 e0       	ldi	r30, 0x09	; 9
 4a8:	1a c2       	rjmp	.+1076   	; 0x8de <__epilogue_restores__+0x12>

000004aa <__clzsi2>:
 4aa:	ef 92       	push	r14
 4ac:	ff 92       	push	r15
 4ae:	0f 93       	push	r16
 4b0:	1f 93       	push	r17
 4b2:	7b 01       	movw	r14, r22
 4b4:	8c 01       	movw	r16, r24
 4b6:	80 e0       	ldi	r24, 0x00	; 0
 4b8:	e8 16       	cp	r14, r24
 4ba:	80 e0       	ldi	r24, 0x00	; 0
 4bc:	f8 06       	cpc	r15, r24
 4be:	81 e0       	ldi	r24, 0x01	; 1
 4c0:	08 07       	cpc	r16, r24
 4c2:	80 e0       	ldi	r24, 0x00	; 0
 4c4:	18 07       	cpc	r17, r24
 4c6:	88 f4       	brcc	.+34     	; 0x4ea <__clzsi2+0x40>
 4c8:	8f ef       	ldi	r24, 0xFF	; 255
 4ca:	e8 16       	cp	r14, r24
 4cc:	f1 04       	cpc	r15, r1
 4ce:	01 05       	cpc	r16, r1
 4d0:	11 05       	cpc	r17, r1
 4d2:	31 f0       	breq	.+12     	; 0x4e0 <__clzsi2+0x36>
 4d4:	28 f0       	brcs	.+10     	; 0x4e0 <__clzsi2+0x36>
 4d6:	88 e0       	ldi	r24, 0x08	; 8
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	a0 e0       	ldi	r26, 0x00	; 0
 4dc:	b0 e0       	ldi	r27, 0x00	; 0
 4de:	17 c0       	rjmp	.+46     	; 0x50e <__clzsi2+0x64>
 4e0:	80 e0       	ldi	r24, 0x00	; 0
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	a0 e0       	ldi	r26, 0x00	; 0
 4e6:	b0 e0       	ldi	r27, 0x00	; 0
 4e8:	12 c0       	rjmp	.+36     	; 0x50e <__clzsi2+0x64>
 4ea:	80 e0       	ldi	r24, 0x00	; 0
 4ec:	e8 16       	cp	r14, r24
 4ee:	80 e0       	ldi	r24, 0x00	; 0
 4f0:	f8 06       	cpc	r15, r24
 4f2:	80 e0       	ldi	r24, 0x00	; 0
 4f4:	08 07       	cpc	r16, r24
 4f6:	81 e0       	ldi	r24, 0x01	; 1
 4f8:	18 07       	cpc	r17, r24
 4fa:	28 f0       	brcs	.+10     	; 0x506 <__clzsi2+0x5c>
 4fc:	88 e1       	ldi	r24, 0x18	; 24
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	a0 e0       	ldi	r26, 0x00	; 0
 502:	b0 e0       	ldi	r27, 0x00	; 0
 504:	04 c0       	rjmp	.+8      	; 0x50e <__clzsi2+0x64>
 506:	80 e1       	ldi	r24, 0x10	; 16
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	a0 e0       	ldi	r26, 0x00	; 0
 50c:	b0 e0       	ldi	r27, 0x00	; 0
 50e:	20 e2       	ldi	r18, 0x20	; 32
 510:	30 e0       	ldi	r19, 0x00	; 0
 512:	40 e0       	ldi	r20, 0x00	; 0
 514:	50 e0       	ldi	r21, 0x00	; 0
 516:	28 1b       	sub	r18, r24
 518:	39 0b       	sbc	r19, r25
 51a:	4a 0b       	sbc	r20, r26
 51c:	5b 0b       	sbc	r21, r27
 51e:	04 c0       	rjmp	.+8      	; 0x528 <__clzsi2+0x7e>
 520:	16 95       	lsr	r17
 522:	07 95       	ror	r16
 524:	f7 94       	ror	r15
 526:	e7 94       	ror	r14
 528:	8a 95       	dec	r24
 52a:	d2 f7       	brpl	.-12     	; 0x520 <__clzsi2+0x76>
 52c:	f7 01       	movw	r30, r14
 52e:	e8 59       	subi	r30, 0x98	; 152
 530:	ff 4f       	sbci	r31, 0xFF	; 255
 532:	80 81       	ld	r24, Z
 534:	28 1b       	sub	r18, r24
 536:	31 09       	sbc	r19, r1
 538:	41 09       	sbc	r20, r1
 53a:	51 09       	sbc	r21, r1
 53c:	c9 01       	movw	r24, r18
 53e:	1f 91       	pop	r17
 540:	0f 91       	pop	r16
 542:	ff 90       	pop	r15
 544:	ef 90       	pop	r14
 546:	08 95       	ret

00000548 <__pack_f>:
 548:	df 92       	push	r13
 54a:	ef 92       	push	r14
 54c:	ff 92       	push	r15
 54e:	0f 93       	push	r16
 550:	1f 93       	push	r17
 552:	fc 01       	movw	r30, r24
 554:	e4 80       	ldd	r14, Z+4	; 0x04
 556:	f5 80       	ldd	r15, Z+5	; 0x05
 558:	06 81       	ldd	r16, Z+6	; 0x06
 55a:	17 81       	ldd	r17, Z+7	; 0x07
 55c:	d1 80       	ldd	r13, Z+1	; 0x01
 55e:	80 81       	ld	r24, Z
 560:	82 30       	cpi	r24, 0x02	; 2
 562:	48 f4       	brcc	.+18     	; 0x576 <__pack_f+0x2e>
 564:	80 e0       	ldi	r24, 0x00	; 0
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	a0 e1       	ldi	r26, 0x10	; 16
 56a:	b0 e0       	ldi	r27, 0x00	; 0
 56c:	e8 2a       	or	r14, r24
 56e:	f9 2a       	or	r15, r25
 570:	0a 2b       	or	r16, r26
 572:	1b 2b       	or	r17, r27
 574:	a5 c0       	rjmp	.+330    	; 0x6c0 <__pack_f+0x178>
 576:	84 30       	cpi	r24, 0x04	; 4
 578:	09 f4       	brne	.+2      	; 0x57c <__pack_f+0x34>
 57a:	9f c0       	rjmp	.+318    	; 0x6ba <__pack_f+0x172>
 57c:	82 30       	cpi	r24, 0x02	; 2
 57e:	21 f4       	brne	.+8      	; 0x588 <__pack_f+0x40>
 580:	ee 24       	eor	r14, r14
 582:	ff 24       	eor	r15, r15
 584:	87 01       	movw	r16, r14
 586:	05 c0       	rjmp	.+10     	; 0x592 <__pack_f+0x4a>
 588:	e1 14       	cp	r14, r1
 58a:	f1 04       	cpc	r15, r1
 58c:	01 05       	cpc	r16, r1
 58e:	11 05       	cpc	r17, r1
 590:	19 f4       	brne	.+6      	; 0x598 <__pack_f+0x50>
 592:	e0 e0       	ldi	r30, 0x00	; 0
 594:	f0 e0       	ldi	r31, 0x00	; 0
 596:	96 c0       	rjmp	.+300    	; 0x6c4 <__pack_f+0x17c>
 598:	62 81       	ldd	r22, Z+2	; 0x02
 59a:	73 81       	ldd	r23, Z+3	; 0x03
 59c:	9f ef       	ldi	r25, 0xFF	; 255
 59e:	62 38       	cpi	r22, 0x82	; 130
 5a0:	79 07       	cpc	r23, r25
 5a2:	0c f0       	brlt	.+2      	; 0x5a6 <__pack_f+0x5e>
 5a4:	5b c0       	rjmp	.+182    	; 0x65c <__pack_f+0x114>
 5a6:	22 e8       	ldi	r18, 0x82	; 130
 5a8:	3f ef       	ldi	r19, 0xFF	; 255
 5aa:	26 1b       	sub	r18, r22
 5ac:	37 0b       	sbc	r19, r23
 5ae:	2a 31       	cpi	r18, 0x1A	; 26
 5b0:	31 05       	cpc	r19, r1
 5b2:	2c f0       	brlt	.+10     	; 0x5be <__pack_f+0x76>
 5b4:	20 e0       	ldi	r18, 0x00	; 0
 5b6:	30 e0       	ldi	r19, 0x00	; 0
 5b8:	40 e0       	ldi	r20, 0x00	; 0
 5ba:	50 e0       	ldi	r21, 0x00	; 0
 5bc:	2a c0       	rjmp	.+84     	; 0x612 <__pack_f+0xca>
 5be:	b8 01       	movw	r22, r16
 5c0:	a7 01       	movw	r20, r14
 5c2:	02 2e       	mov	r0, r18
 5c4:	04 c0       	rjmp	.+8      	; 0x5ce <__pack_f+0x86>
 5c6:	76 95       	lsr	r23
 5c8:	67 95       	ror	r22
 5ca:	57 95       	ror	r21
 5cc:	47 95       	ror	r20
 5ce:	0a 94       	dec	r0
 5d0:	d2 f7       	brpl	.-12     	; 0x5c6 <__pack_f+0x7e>
 5d2:	81 e0       	ldi	r24, 0x01	; 1
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	a0 e0       	ldi	r26, 0x00	; 0
 5d8:	b0 e0       	ldi	r27, 0x00	; 0
 5da:	04 c0       	rjmp	.+8      	; 0x5e4 <__pack_f+0x9c>
 5dc:	88 0f       	add	r24, r24
 5de:	99 1f       	adc	r25, r25
 5e0:	aa 1f       	adc	r26, r26
 5e2:	bb 1f       	adc	r27, r27
 5e4:	2a 95       	dec	r18
 5e6:	d2 f7       	brpl	.-12     	; 0x5dc <__pack_f+0x94>
 5e8:	01 97       	sbiw	r24, 0x01	; 1
 5ea:	a1 09       	sbc	r26, r1
 5ec:	b1 09       	sbc	r27, r1
 5ee:	8e 21       	and	r24, r14
 5f0:	9f 21       	and	r25, r15
 5f2:	a0 23       	and	r26, r16
 5f4:	b1 23       	and	r27, r17
 5f6:	00 97       	sbiw	r24, 0x00	; 0
 5f8:	a1 05       	cpc	r26, r1
 5fa:	b1 05       	cpc	r27, r1
 5fc:	21 f0       	breq	.+8      	; 0x606 <__pack_f+0xbe>
 5fe:	81 e0       	ldi	r24, 0x01	; 1
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	a0 e0       	ldi	r26, 0x00	; 0
 604:	b0 e0       	ldi	r27, 0x00	; 0
 606:	9a 01       	movw	r18, r20
 608:	ab 01       	movw	r20, r22
 60a:	28 2b       	or	r18, r24
 60c:	39 2b       	or	r19, r25
 60e:	4a 2b       	or	r20, r26
 610:	5b 2b       	or	r21, r27
 612:	da 01       	movw	r26, r20
 614:	c9 01       	movw	r24, r18
 616:	8f 77       	andi	r24, 0x7F	; 127
 618:	90 70       	andi	r25, 0x00	; 0
 61a:	a0 70       	andi	r26, 0x00	; 0
 61c:	b0 70       	andi	r27, 0x00	; 0
 61e:	80 34       	cpi	r24, 0x40	; 64
 620:	91 05       	cpc	r25, r1
 622:	a1 05       	cpc	r26, r1
 624:	b1 05       	cpc	r27, r1
 626:	39 f4       	brne	.+14     	; 0x636 <__pack_f+0xee>
 628:	27 ff       	sbrs	r18, 7
 62a:	09 c0       	rjmp	.+18     	; 0x63e <__pack_f+0xf6>
 62c:	20 5c       	subi	r18, 0xC0	; 192
 62e:	3f 4f       	sbci	r19, 0xFF	; 255
 630:	4f 4f       	sbci	r20, 0xFF	; 255
 632:	5f 4f       	sbci	r21, 0xFF	; 255
 634:	04 c0       	rjmp	.+8      	; 0x63e <__pack_f+0xf6>
 636:	21 5c       	subi	r18, 0xC1	; 193
 638:	3f 4f       	sbci	r19, 0xFF	; 255
 63a:	4f 4f       	sbci	r20, 0xFF	; 255
 63c:	5f 4f       	sbci	r21, 0xFF	; 255
 63e:	e0 e0       	ldi	r30, 0x00	; 0
 640:	f0 e0       	ldi	r31, 0x00	; 0
 642:	20 30       	cpi	r18, 0x00	; 0
 644:	a0 e0       	ldi	r26, 0x00	; 0
 646:	3a 07       	cpc	r19, r26
 648:	a0 e0       	ldi	r26, 0x00	; 0
 64a:	4a 07       	cpc	r20, r26
 64c:	a0 e4       	ldi	r26, 0x40	; 64
 64e:	5a 07       	cpc	r21, r26
 650:	10 f0       	brcs	.+4      	; 0x656 <__pack_f+0x10e>
 652:	e1 e0       	ldi	r30, 0x01	; 1
 654:	f0 e0       	ldi	r31, 0x00	; 0
 656:	79 01       	movw	r14, r18
 658:	8a 01       	movw	r16, r20
 65a:	27 c0       	rjmp	.+78     	; 0x6aa <__pack_f+0x162>
 65c:	60 38       	cpi	r22, 0x80	; 128
 65e:	71 05       	cpc	r23, r1
 660:	64 f5       	brge	.+88     	; 0x6ba <__pack_f+0x172>
 662:	fb 01       	movw	r30, r22
 664:	e1 58       	subi	r30, 0x81	; 129
 666:	ff 4f       	sbci	r31, 0xFF	; 255
 668:	d8 01       	movw	r26, r16
 66a:	c7 01       	movw	r24, r14
 66c:	8f 77       	andi	r24, 0x7F	; 127
 66e:	90 70       	andi	r25, 0x00	; 0
 670:	a0 70       	andi	r26, 0x00	; 0
 672:	b0 70       	andi	r27, 0x00	; 0
 674:	80 34       	cpi	r24, 0x40	; 64
 676:	91 05       	cpc	r25, r1
 678:	a1 05       	cpc	r26, r1
 67a:	b1 05       	cpc	r27, r1
 67c:	39 f4       	brne	.+14     	; 0x68c <__pack_f+0x144>
 67e:	e7 fe       	sbrs	r14, 7
 680:	0d c0       	rjmp	.+26     	; 0x69c <__pack_f+0x154>
 682:	80 e4       	ldi	r24, 0x40	; 64
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	a0 e0       	ldi	r26, 0x00	; 0
 688:	b0 e0       	ldi	r27, 0x00	; 0
 68a:	04 c0       	rjmp	.+8      	; 0x694 <__pack_f+0x14c>
 68c:	8f e3       	ldi	r24, 0x3F	; 63
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	a0 e0       	ldi	r26, 0x00	; 0
 692:	b0 e0       	ldi	r27, 0x00	; 0
 694:	e8 0e       	add	r14, r24
 696:	f9 1e       	adc	r15, r25
 698:	0a 1f       	adc	r16, r26
 69a:	1b 1f       	adc	r17, r27
 69c:	17 ff       	sbrs	r17, 7
 69e:	05 c0       	rjmp	.+10     	; 0x6aa <__pack_f+0x162>
 6a0:	16 95       	lsr	r17
 6a2:	07 95       	ror	r16
 6a4:	f7 94       	ror	r15
 6a6:	e7 94       	ror	r14
 6a8:	31 96       	adiw	r30, 0x01	; 1
 6aa:	87 e0       	ldi	r24, 0x07	; 7
 6ac:	16 95       	lsr	r17
 6ae:	07 95       	ror	r16
 6b0:	f7 94       	ror	r15
 6b2:	e7 94       	ror	r14
 6b4:	8a 95       	dec	r24
 6b6:	d1 f7       	brne	.-12     	; 0x6ac <__pack_f+0x164>
 6b8:	05 c0       	rjmp	.+10     	; 0x6c4 <__pack_f+0x17c>
 6ba:	ee 24       	eor	r14, r14
 6bc:	ff 24       	eor	r15, r15
 6be:	87 01       	movw	r16, r14
 6c0:	ef ef       	ldi	r30, 0xFF	; 255
 6c2:	f0 e0       	ldi	r31, 0x00	; 0
 6c4:	6e 2f       	mov	r22, r30
 6c6:	67 95       	ror	r22
 6c8:	66 27       	eor	r22, r22
 6ca:	67 95       	ror	r22
 6cc:	90 2f       	mov	r25, r16
 6ce:	9f 77       	andi	r25, 0x7F	; 127
 6d0:	d7 94       	ror	r13
 6d2:	dd 24       	eor	r13, r13
 6d4:	d7 94       	ror	r13
 6d6:	8e 2f       	mov	r24, r30
 6d8:	86 95       	lsr	r24
 6da:	49 2f       	mov	r20, r25
 6dc:	46 2b       	or	r20, r22
 6de:	58 2f       	mov	r21, r24
 6e0:	5d 29       	or	r21, r13
 6e2:	b7 01       	movw	r22, r14
 6e4:	ca 01       	movw	r24, r20
 6e6:	1f 91       	pop	r17
 6e8:	0f 91       	pop	r16
 6ea:	ff 90       	pop	r15
 6ec:	ef 90       	pop	r14
 6ee:	df 90       	pop	r13
 6f0:	08 95       	ret

000006f2 <__unpack_f>:
 6f2:	fc 01       	movw	r30, r24
 6f4:	db 01       	movw	r26, r22
 6f6:	40 81       	ld	r20, Z
 6f8:	51 81       	ldd	r21, Z+1	; 0x01
 6fa:	22 81       	ldd	r18, Z+2	; 0x02
 6fc:	62 2f       	mov	r22, r18
 6fe:	6f 77       	andi	r22, 0x7F	; 127
 700:	70 e0       	ldi	r23, 0x00	; 0
 702:	22 1f       	adc	r18, r18
 704:	22 27       	eor	r18, r18
 706:	22 1f       	adc	r18, r18
 708:	93 81       	ldd	r25, Z+3	; 0x03
 70a:	89 2f       	mov	r24, r25
 70c:	88 0f       	add	r24, r24
 70e:	82 2b       	or	r24, r18
 710:	28 2f       	mov	r18, r24
 712:	30 e0       	ldi	r19, 0x00	; 0
 714:	99 1f       	adc	r25, r25
 716:	99 27       	eor	r25, r25
 718:	99 1f       	adc	r25, r25
 71a:	11 96       	adiw	r26, 0x01	; 1
 71c:	9c 93       	st	X, r25
 71e:	11 97       	sbiw	r26, 0x01	; 1
 720:	21 15       	cp	r18, r1
 722:	31 05       	cpc	r19, r1
 724:	a9 f5       	brne	.+106    	; 0x790 <__unpack_f+0x9e>
 726:	41 15       	cp	r20, r1
 728:	51 05       	cpc	r21, r1
 72a:	61 05       	cpc	r22, r1
 72c:	71 05       	cpc	r23, r1
 72e:	11 f4       	brne	.+4      	; 0x734 <__unpack_f+0x42>
 730:	82 e0       	ldi	r24, 0x02	; 2
 732:	37 c0       	rjmp	.+110    	; 0x7a2 <__unpack_f+0xb0>
 734:	82 e8       	ldi	r24, 0x82	; 130
 736:	9f ef       	ldi	r25, 0xFF	; 255
 738:	13 96       	adiw	r26, 0x03	; 3
 73a:	9c 93       	st	X, r25
 73c:	8e 93       	st	-X, r24
 73e:	12 97       	sbiw	r26, 0x02	; 2
 740:	9a 01       	movw	r18, r20
 742:	ab 01       	movw	r20, r22
 744:	67 e0       	ldi	r22, 0x07	; 7
 746:	22 0f       	add	r18, r18
 748:	33 1f       	adc	r19, r19
 74a:	44 1f       	adc	r20, r20
 74c:	55 1f       	adc	r21, r21
 74e:	6a 95       	dec	r22
 750:	d1 f7       	brne	.-12     	; 0x746 <__unpack_f+0x54>
 752:	83 e0       	ldi	r24, 0x03	; 3
 754:	8c 93       	st	X, r24
 756:	0d c0       	rjmp	.+26     	; 0x772 <__unpack_f+0x80>
 758:	22 0f       	add	r18, r18
 75a:	33 1f       	adc	r19, r19
 75c:	44 1f       	adc	r20, r20
 75e:	55 1f       	adc	r21, r21
 760:	12 96       	adiw	r26, 0x02	; 2
 762:	8d 91       	ld	r24, X+
 764:	9c 91       	ld	r25, X
 766:	13 97       	sbiw	r26, 0x03	; 3
 768:	01 97       	sbiw	r24, 0x01	; 1
 76a:	13 96       	adiw	r26, 0x03	; 3
 76c:	9c 93       	st	X, r25
 76e:	8e 93       	st	-X, r24
 770:	12 97       	sbiw	r26, 0x02	; 2
 772:	20 30       	cpi	r18, 0x00	; 0
 774:	80 e0       	ldi	r24, 0x00	; 0
 776:	38 07       	cpc	r19, r24
 778:	80 e0       	ldi	r24, 0x00	; 0
 77a:	48 07       	cpc	r20, r24
 77c:	80 e4       	ldi	r24, 0x40	; 64
 77e:	58 07       	cpc	r21, r24
 780:	58 f3       	brcs	.-42     	; 0x758 <__unpack_f+0x66>
 782:	14 96       	adiw	r26, 0x04	; 4
 784:	2d 93       	st	X+, r18
 786:	3d 93       	st	X+, r19
 788:	4d 93       	st	X+, r20
 78a:	5c 93       	st	X, r21
 78c:	17 97       	sbiw	r26, 0x07	; 7
 78e:	08 95       	ret
 790:	2f 3f       	cpi	r18, 0xFF	; 255
 792:	31 05       	cpc	r19, r1
 794:	79 f4       	brne	.+30     	; 0x7b4 <__unpack_f+0xc2>
 796:	41 15       	cp	r20, r1
 798:	51 05       	cpc	r21, r1
 79a:	61 05       	cpc	r22, r1
 79c:	71 05       	cpc	r23, r1
 79e:	19 f4       	brne	.+6      	; 0x7a6 <__unpack_f+0xb4>
 7a0:	84 e0       	ldi	r24, 0x04	; 4
 7a2:	8c 93       	st	X, r24
 7a4:	08 95       	ret
 7a6:	64 ff       	sbrs	r22, 4
 7a8:	03 c0       	rjmp	.+6      	; 0x7b0 <__unpack_f+0xbe>
 7aa:	81 e0       	ldi	r24, 0x01	; 1
 7ac:	8c 93       	st	X, r24
 7ae:	12 c0       	rjmp	.+36     	; 0x7d4 <__unpack_f+0xe2>
 7b0:	1c 92       	st	X, r1
 7b2:	10 c0       	rjmp	.+32     	; 0x7d4 <__unpack_f+0xe2>
 7b4:	2f 57       	subi	r18, 0x7F	; 127
 7b6:	30 40       	sbci	r19, 0x00	; 0
 7b8:	13 96       	adiw	r26, 0x03	; 3
 7ba:	3c 93       	st	X, r19
 7bc:	2e 93       	st	-X, r18
 7be:	12 97       	sbiw	r26, 0x02	; 2
 7c0:	83 e0       	ldi	r24, 0x03	; 3
 7c2:	8c 93       	st	X, r24
 7c4:	87 e0       	ldi	r24, 0x07	; 7
 7c6:	44 0f       	add	r20, r20
 7c8:	55 1f       	adc	r21, r21
 7ca:	66 1f       	adc	r22, r22
 7cc:	77 1f       	adc	r23, r23
 7ce:	8a 95       	dec	r24
 7d0:	d1 f7       	brne	.-12     	; 0x7c6 <__unpack_f+0xd4>
 7d2:	70 64       	ori	r23, 0x40	; 64
 7d4:	14 96       	adiw	r26, 0x04	; 4
 7d6:	4d 93       	st	X+, r20
 7d8:	5d 93       	st	X+, r21
 7da:	6d 93       	st	X+, r22
 7dc:	7c 93       	st	X, r23
 7de:	17 97       	sbiw	r26, 0x07	; 7
 7e0:	08 95       	ret

000007e2 <__fpcmp_parts_f>:
 7e2:	1f 93       	push	r17
 7e4:	dc 01       	movw	r26, r24
 7e6:	fb 01       	movw	r30, r22
 7e8:	9c 91       	ld	r25, X
 7ea:	92 30       	cpi	r25, 0x02	; 2
 7ec:	08 f4       	brcc	.+2      	; 0x7f0 <__fpcmp_parts_f+0xe>
 7ee:	47 c0       	rjmp	.+142    	; 0x87e <__fpcmp_parts_f+0x9c>
 7f0:	80 81       	ld	r24, Z
 7f2:	82 30       	cpi	r24, 0x02	; 2
 7f4:	08 f4       	brcc	.+2      	; 0x7f8 <__fpcmp_parts_f+0x16>
 7f6:	43 c0       	rjmp	.+134    	; 0x87e <__fpcmp_parts_f+0x9c>
 7f8:	94 30       	cpi	r25, 0x04	; 4
 7fa:	51 f4       	brne	.+20     	; 0x810 <__fpcmp_parts_f+0x2e>
 7fc:	11 96       	adiw	r26, 0x01	; 1
 7fe:	1c 91       	ld	r17, X
 800:	84 30       	cpi	r24, 0x04	; 4
 802:	99 f5       	brne	.+102    	; 0x86a <__fpcmp_parts_f+0x88>
 804:	81 81       	ldd	r24, Z+1	; 0x01
 806:	68 2f       	mov	r22, r24
 808:	70 e0       	ldi	r23, 0x00	; 0
 80a:	61 1b       	sub	r22, r17
 80c:	71 09       	sbc	r23, r1
 80e:	3f c0       	rjmp	.+126    	; 0x88e <__fpcmp_parts_f+0xac>
 810:	84 30       	cpi	r24, 0x04	; 4
 812:	21 f0       	breq	.+8      	; 0x81c <__fpcmp_parts_f+0x3a>
 814:	92 30       	cpi	r25, 0x02	; 2
 816:	31 f4       	brne	.+12     	; 0x824 <__fpcmp_parts_f+0x42>
 818:	82 30       	cpi	r24, 0x02	; 2
 81a:	b9 f1       	breq	.+110    	; 0x88a <__fpcmp_parts_f+0xa8>
 81c:	81 81       	ldd	r24, Z+1	; 0x01
 81e:	88 23       	and	r24, r24
 820:	89 f1       	breq	.+98     	; 0x884 <__fpcmp_parts_f+0xa2>
 822:	2d c0       	rjmp	.+90     	; 0x87e <__fpcmp_parts_f+0x9c>
 824:	11 96       	adiw	r26, 0x01	; 1
 826:	1c 91       	ld	r17, X
 828:	11 97       	sbiw	r26, 0x01	; 1
 82a:	82 30       	cpi	r24, 0x02	; 2
 82c:	f1 f0       	breq	.+60     	; 0x86a <__fpcmp_parts_f+0x88>
 82e:	81 81       	ldd	r24, Z+1	; 0x01
 830:	18 17       	cp	r17, r24
 832:	d9 f4       	brne	.+54     	; 0x86a <__fpcmp_parts_f+0x88>
 834:	12 96       	adiw	r26, 0x02	; 2
 836:	2d 91       	ld	r18, X+
 838:	3c 91       	ld	r19, X
 83a:	13 97       	sbiw	r26, 0x03	; 3
 83c:	82 81       	ldd	r24, Z+2	; 0x02
 83e:	93 81       	ldd	r25, Z+3	; 0x03
 840:	82 17       	cp	r24, r18
 842:	93 07       	cpc	r25, r19
 844:	94 f0       	brlt	.+36     	; 0x86a <__fpcmp_parts_f+0x88>
 846:	28 17       	cp	r18, r24
 848:	39 07       	cpc	r19, r25
 84a:	bc f0       	brlt	.+46     	; 0x87a <__fpcmp_parts_f+0x98>
 84c:	14 96       	adiw	r26, 0x04	; 4
 84e:	8d 91       	ld	r24, X+
 850:	9d 91       	ld	r25, X+
 852:	0d 90       	ld	r0, X+
 854:	bc 91       	ld	r27, X
 856:	a0 2d       	mov	r26, r0
 858:	24 81       	ldd	r18, Z+4	; 0x04
 85a:	35 81       	ldd	r19, Z+5	; 0x05
 85c:	46 81       	ldd	r20, Z+6	; 0x06
 85e:	57 81       	ldd	r21, Z+7	; 0x07
 860:	28 17       	cp	r18, r24
 862:	39 07       	cpc	r19, r25
 864:	4a 07       	cpc	r20, r26
 866:	5b 07       	cpc	r21, r27
 868:	18 f4       	brcc	.+6      	; 0x870 <__fpcmp_parts_f+0x8e>
 86a:	11 23       	and	r17, r17
 86c:	41 f0       	breq	.+16     	; 0x87e <__fpcmp_parts_f+0x9c>
 86e:	0a c0       	rjmp	.+20     	; 0x884 <__fpcmp_parts_f+0xa2>
 870:	82 17       	cp	r24, r18
 872:	93 07       	cpc	r25, r19
 874:	a4 07       	cpc	r26, r20
 876:	b5 07       	cpc	r27, r21
 878:	40 f4       	brcc	.+16     	; 0x88a <__fpcmp_parts_f+0xa8>
 87a:	11 23       	and	r17, r17
 87c:	19 f0       	breq	.+6      	; 0x884 <__fpcmp_parts_f+0xa2>
 87e:	61 e0       	ldi	r22, 0x01	; 1
 880:	70 e0       	ldi	r23, 0x00	; 0
 882:	05 c0       	rjmp	.+10     	; 0x88e <__fpcmp_parts_f+0xac>
 884:	6f ef       	ldi	r22, 0xFF	; 255
 886:	7f ef       	ldi	r23, 0xFF	; 255
 888:	02 c0       	rjmp	.+4      	; 0x88e <__fpcmp_parts_f+0xac>
 88a:	60 e0       	ldi	r22, 0x00	; 0
 88c:	70 e0       	ldi	r23, 0x00	; 0
 88e:	cb 01       	movw	r24, r22
 890:	1f 91       	pop	r17
 892:	08 95       	ret

00000894 <__prologue_saves__>:
 894:	2f 92       	push	r2
 896:	3f 92       	push	r3
 898:	4f 92       	push	r4
 89a:	5f 92       	push	r5
 89c:	6f 92       	push	r6
 89e:	7f 92       	push	r7
 8a0:	8f 92       	push	r8
 8a2:	9f 92       	push	r9
 8a4:	af 92       	push	r10
 8a6:	bf 92       	push	r11
 8a8:	cf 92       	push	r12
 8aa:	df 92       	push	r13
 8ac:	ef 92       	push	r14
 8ae:	ff 92       	push	r15
 8b0:	0f 93       	push	r16
 8b2:	1f 93       	push	r17
 8b4:	cf 93       	push	r28
 8b6:	df 93       	push	r29
 8b8:	cd b7       	in	r28, 0x3d	; 61
 8ba:	de b7       	in	r29, 0x3e	; 62
 8bc:	ca 1b       	sub	r28, r26
 8be:	db 0b       	sbc	r29, r27
 8c0:	0f b6       	in	r0, 0x3f	; 63
 8c2:	f8 94       	cli
 8c4:	de bf       	out	0x3e, r29	; 62
 8c6:	0f be       	out	0x3f, r0	; 63
 8c8:	cd bf       	out	0x3d, r28	; 61
 8ca:	09 94       	ijmp

000008cc <__epilogue_restores__>:
 8cc:	2a 88       	ldd	r2, Y+18	; 0x12
 8ce:	39 88       	ldd	r3, Y+17	; 0x11
 8d0:	48 88       	ldd	r4, Y+16	; 0x10
 8d2:	5f 84       	ldd	r5, Y+15	; 0x0f
 8d4:	6e 84       	ldd	r6, Y+14	; 0x0e
 8d6:	7d 84       	ldd	r7, Y+13	; 0x0d
 8d8:	8c 84       	ldd	r8, Y+12	; 0x0c
 8da:	9b 84       	ldd	r9, Y+11	; 0x0b
 8dc:	aa 84       	ldd	r10, Y+10	; 0x0a
 8de:	b9 84       	ldd	r11, Y+9	; 0x09
 8e0:	c8 84       	ldd	r12, Y+8	; 0x08
 8e2:	df 80       	ldd	r13, Y+7	; 0x07
 8e4:	ee 80       	ldd	r14, Y+6	; 0x06
 8e6:	fd 80       	ldd	r15, Y+5	; 0x05
 8e8:	0c 81       	ldd	r16, Y+4	; 0x04
 8ea:	1b 81       	ldd	r17, Y+3	; 0x03
 8ec:	aa 81       	ldd	r26, Y+2	; 0x02
 8ee:	b9 81       	ldd	r27, Y+1	; 0x01
 8f0:	ce 0f       	add	r28, r30
 8f2:	d1 1d       	adc	r29, r1
 8f4:	0f b6       	in	r0, 0x3f	; 63
 8f6:	f8 94       	cli
 8f8:	de bf       	out	0x3e, r29	; 62
 8fa:	0f be       	out	0x3f, r0	; 63
 8fc:	cd bf       	out	0x3d, r28	; 61
 8fe:	ed 01       	movw	r28, r26
 900:	08 95       	ret

00000902 <_exit>:
 902:	f8 94       	cli

00000904 <__stop_program>:
 904:	ff cf       	rjmp	.-2      	; 0x904 <__stop_program>
